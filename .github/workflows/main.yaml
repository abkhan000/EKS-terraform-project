name: Terraform EKS Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
     
jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
        
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: terraform  # This ensures that the 'deploy' job waits for the 'terraform' job to complete

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
         curl -LO "https://dl.k8s.io/release/v1.27.0/bin/linux/amd64/kubectl"
         chmod +x ./kubectl
         sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
      - name: Test Kubernetes connection
        run: kubectl get nodes

      - name: Apply Kubernetes manifests
        run: |
         kubectl apply -f whoami-deployment.yaml--validate=false
         kubectl apply -f whoami-service.yaml --validate=false
         kubectl apply -f canary-whoami-deployment.yaml --validate=false
        
  docker-push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: [terraform, deploy]  # Ensure this job waits for both 'terraform' and 'deploy' to finish

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t your-dockerhub-username/congtaojiang/whoami-nodejs-express:latest .

    - name: Push Docker image
      run: docker push your-dockerhub-username/congtaojiang/whoami-nodejs-express:latest
    
